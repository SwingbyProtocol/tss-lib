// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

option go_package = "github.com/binance-chain/tss-lib/ecdsa/signing";

import "protob/shared.proto";

/*
 * Represents a P2P message sent to each party during Phase 1 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound1Message1 {
    bytes c = 1;
    repeated bytes range_proof_alice = 2;
}

/*
 * Represents a BROADCAST message sent to all parties during Phase 1 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound1Message2 {
    bytes commitment = 1;
}

/*
 * Represents a P2P message sent to each party during Phase 2 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound2Message {
    bytes c1 = 1;
    bytes c2 = 2;
    repeated bytes proof_bob = 3;
    repeated bytes proof_bob_wc = 4;
}

/*
 * Represents a BROADCAST message sent to all parties during Phase 3 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound3Message {
    bytes delta_i = 1;
    ECPoint t_i = 2;
    ECPoint t_proof_alpha = 3;
    bytes t_proof_t = 4;
    bytes t_proof_u = 5;
}

/*
 * Represents a BROADCAST message sent to all parties during Phase 4 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound4Message {
    repeated bytes de_commitment = 1;
}

/*
 * Represents a BROADCAST message sent to all parties during Phase 5 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound5Message {
    ECPoint r_i = 1;
    message proof_pdl_w_slack {
        repeated bytes proof_pdl_w_slack = 2;
    }
    repeated proof_pdl_w_slack proof_pdl_w_slacks = 3;
}

/*
 * Represents a BROADCAST message sent to all parties during Phase 6 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound6Message {
    message SuccessData {
        ECPoint s_i = 1;
        ECPoint st_proof_alpha = 2;
        ECPoint st_proof_beta = 3;
        bytes st_proof_t = 4;
        bytes st_proof_u = 5;
    }
    message AbortData {
        bytes k_i = 1;
        bytes gamma_i = 3;
        repeated bytes alpha_i_j = 4;
        repeated bytes beta_j_i = 5;
    }
    oneof content {
        SuccessData success = 1;
        AbortData abort = 2;
    }
}

/*
 * Represents a BROADCAST message sent to all parties during online mode Phase 7 of the GG20 ECDSA TSS signing protocol.
 */
message SignRound7Message {
    message AbortData {
        bytes k_i = 1;
        bytes k_rand_i = 2;
        repeated bytes mu_i_j = 3;
        repeated bytes mu_rand_i_j = 4;
        ECPoint ecddh_proof_a1 = 5;
        ECPoint ecddh_proof_a2 = 6;
        bytes ecddh_proof_z = 7;
    }
    oneof content {
        bytes s_i = 1;
        AbortData abort = 2;
    }
}
